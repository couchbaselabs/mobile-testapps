apply plugin: 'com.android.application'

ext {
    DEF_VERSION = System.getenv("MAVEN_UPLOAD_VERSION")
    // When manually build in Android studio, replace System.getenv("MAVEN_UPLOAD_VERSION") with build version you want to build
    // ex: DEF_VERSION = "3.1.0-353"
    COUCHBASE_LITE_VERSION = System.getProperty('version', DEF_VERSION)

    PROJECT_DIR = "${projectDir}"
    ROOT_DIR = "${PROJECT_DIR}/../../"
    JAVA_COMMON_DIR = "${ROOT_DIR}/JavaRequestHandlers"
    ASSET_DIR = "${JAVA_COMMON_DIR}/src/main/assets"
    JAVA_SERVER_DIR = "${ROOT_DIR}/JavaRequestListener"
}

android {
    namespace "com.couchbase.CouchbaseLiteServ"
    compileSdkVersion 33
    buildToolsVersion '33.0.1'

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 32
        versionCode 1
        versionName DEF_VERSION
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        config {
            keyAlias 'cbl-android-key'
            keyPassword 'couchbase'
            storeFile file('android-key')
            storePassword 'couchbase'
        }
    }

    sourceSets {
        main {
            java.srcDirs = [
                    "src/main/java/",                                   // android specific codes
                    "${JAVA_COMMON_DIR}/src/main/java",
                    "${JAVA_SERVER_DIR}/src/main/java"

            ]
            resources.srcDirs = [
                    "src/main/res/",                                    // android resource files
                    ASSET_DIR
            ]

        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
}

repositories {
    if (null == COUCHBASE_LITE_VERSION) {
        mavenLocal()
        COUCHBASE_LITE_VERSION = "3.1.0-SNAPSHOT"
    }
    else {
        // for build version < 3.0.0-160, use below maven url
        // maven { url "http://proget.build.couchbase.com/maven2/internalmaven" }
        maven { url "http://mobile.nuget.couchbase.com/maven2/internalmaven/" }
    }

    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }

    google()
    mavenCentral()
}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'androidx.appcompat:appcompat:1.5.1'

    implementation 'com.google.code.gson:gson:2.8.9'

    // Using snapshot code to validate our product is incredibly dubious...
    implementation 'org.nanohttpd:nanohttpd:2.3.2-SNAPSHOT'

    // for build version < 3.0.0-160, use below package name
    // implementation "com.couchbase.lite:couchbase-lite-android-ee:${COUCHBASE_LITE_VERSION}"
    // for build version > 3.0.0-160 but < 3.0.0-177, use below package name
    // implementation "com.couchbase.lite:couchbase-lite-kt-android-ee:${COUCHBASE_LITE_VERSION}"
    // for build version > 3.0.0-177, use below package name
    implementation "com.couchbase.lite:couchbase-lite-android-ee-ktx:${COUCHBASE_LITE_VERSION}"
    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}
